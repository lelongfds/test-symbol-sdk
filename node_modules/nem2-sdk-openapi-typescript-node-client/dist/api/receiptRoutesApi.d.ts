/// <reference types="node" />
import http = require('http');
import { MerkleProofInfoDTO } from '../model/merkleProofInfoDTO';
import { StatementsDTO } from '../model/statementsDTO';
import { Authentication } from '../model/models';
export declare enum ReceiptRoutesApiApiKeys {
}
export declare class ReceiptRoutesApi {
    protected _basePath: string;
    protected defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        'default': Authentication;
    };
    constructor(basePath?: string);
    useQuerystring: boolean;
    basePath: string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ReceiptRoutesApiApiKeys, value: string): void;
    getBlockReceipts(height: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: StatementsDTO;
    }>;
    getMerkleReceipts(height: string, hash: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: MerkleProofInfoDTO;
    }>;
}
